"use strict";(self.webpackChunkknowledge_base=self.webpackChunkknowledge_base||[]).push([[685],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5195:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="Introduction",l={unversionedId:"ZK/intro",id:"ZK/intro",title:"Introduction",description:"Zero knowledge proof is the ability to explain honest computation without revealing inputs. They can be used for",source:"@site/docs/ZK/intro.md",sourceDirName:"ZK",slug:"/ZK/intro",permalink:"/knowledge-base/docs/ZK/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Sequencer",permalink:"/knowledge-base/docs/Scaling/Sequencers"}},s={},c=[{value:"References",id:"references",level:4}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Zero knowledge proof is the ability to explain honest computation without revealing inputs. They can be used for\nscalability (Starknet, zkSync) and privacy (Tornado cash). ZKPs must satisfy three properties."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Completeness")," : If a statement is true , an honest prover can always convince a honest verifier."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Soundness")," : If a statement is false, a dishonest prover can't convince a honest verifier. Being probablistic, this\nvery low."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("em",{parentName:"li"},"Zero Knowledge"),": The verifier learns nothing apart from the fact the statement is true.")),(0,o.kt)("h1",{id:"snark-construction"},"SNARK Construction"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Transform the statement into polynomials"),(0,o.kt)("li",{parentName:"ol"},"You have provers, verifiers and challeange."),(0,o.kt)("li",{parentName:"ol"},"To make the challenge non-interactive , you need a CRS (Common reference string) - created as a trusted setup."),(0,o.kt)("li",{parentName:"ol"},"CRS is encrypted as it needs to be reused. This is done by multiplying encrypted values with elliptic curves\nresulting in elliptic curve pairings.")),(0,o.kt)("h1",{id:"snark-evaluation"},"SNARK Evaluation"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Prover time."),(0,o.kt)("li",{parentName:"ol"},"Proof size. (192 bytes groth16)"),(0,o.kt)("li",{parentName:"ol"},"Verification time.")),(0,o.kt)("p",null,"Systems like groth16 need a trusted setup to generate CRS. A variant of this could be a universal trusted setup where\nthis ceremony needs to be done only once , instead per interaction. "),(0,o.kt)("p",null,"Proof systems like PLONK,Halo,STARKS do not require\na trusted setup. They achive this by using interactive oracle proofs (IOP) or Holographic proving systems(AHP)."),(0,o.kt)("h1",{id:"terminology"},"Terminology"),(0,o.kt)("p",null,'"I know a secret such that H(secret) = hashvalue"'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Statement(x) : public data what we are proving - hashvalue"),(0,o.kt)("li",{parentName:"ul"},"Witness(w): private data - secret"),(0,o.kt)("li",{parentName:"ul"},"Ralation(R): What is the relationship between x & w? Ex: if R(x,w) is true if x == H(x)")),(0,o.kt)("h4",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=BT88s7_VtC8&t=37s"},"Introduction to Zero Knowledge Proofs")," - Elena Nadolinski")))}d.isMDXComponent=!0}}]);